apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: javacro-cluster-oauth
  namespace: javacro
spec:
  spec:
  entityOperator:
    topicOperator:
      reconciliationIntervalSeconds: 90
    userOperator:
      reconciliationIntervalSeconds: 120
  kafka:
    version: 3.1.0
    config:
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
      inter.broker.protocol.version: "3.1"
    listeners:
       - name: external
         port: 9094
         tls: true
         type: route
         authentication:
          checkIssuer: true
          jwksEndpointUri: >-
            https://keycloak-javacro.apps-crc.testing/auth/realms/kafka-authz/protocol/openid-connect/certs
          userNameClaim: preferred_username
          checkAccessTokenType: true
          accessTokenIsJwt: true
          enableOauthBearer: true
          validIssuerUri: >-
            https://keycloak-javacro.apps-crc.testing/auth/realms/kafka-authz
          tlsTrustedCertificates:
            - certificate: keycloak.crt
              secretName: ca-keycloak
          type: oauth
       - name: plain
         port: 9092
         type: internal
         tls: false
       - name: tls
         port: 9093
         type: internal
         tls: true
    authorization:
      type: keycloak
      clientId: kafka
      tokenEndpointUri: https://keycloak-javacro.apps-crc.testing/auth/realms/kafka-authz/protocol/openid-connect/token
      tlsTrustedCertificates:
        - secretName: ca-keycloak
          certificate: keycloak.crt
      delegateToKafkaAcls: true
      superUsers:
        - User:service-account-kafka
    logging:
      loggers:
        log4j.logger.io.strimzi: "TRACE"
        log4j.logger.kafka: "DEBUG"
        log4j.logger.org.apache.kafka: "DEBUG"
      type: inline
    replicas: 1
    storage:
      type: ephemeral
  zookeeper:
    replicas: 1
    storage:
      type: ephemeral